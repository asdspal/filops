version: '3.8'

services:
  # PostgreSQL - Main database for metadata, policies, agents
  postgres:
    image: postgres:16-alpine
    container_name: filops-postgres
    environment:
      POSTGRES_USER: filops
      POSTGRES_PASSWORD: filops
      POSTGRES_DB: filops
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init-scripts/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U filops"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - filops-network

  # TimescaleDB - Time-series database for metrics
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: filops-timescaledb
    environment:
      POSTGRES_USER: filops
      POSTGRES_PASSWORD: filops
      POSTGRES_DB: filops_metrics
    ports:
      - "5433:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./infrastructure/init-scripts/timescale:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U filops"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - filops-network

  # Zookeeper - Required for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: filops-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - filops-network

  # Kafka - Event bus for real-time events
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: filops-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - filops-network

  # Kafka UI - Optional web interface for Kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: filops-kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: filops
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8080:8080"
    networks:
      - filops-network

volumes:
  postgres_data:
  timescale_data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:

networks:
  filops-network:
    driver: bridge
